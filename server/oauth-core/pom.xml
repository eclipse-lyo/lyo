<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.eclipse.lyo.oslc4j.server</groupId>
        <artifactId>lyo-server-build</artifactId>
        <version>7.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <groupId>org.eclipse.lyo.server</groupId>
    <artifactId>oauth-core</artifactId>
    <packaging>jar</packaging>
    <name>Lyo :: Server :: OAuth Core</name>
    <description>Core components of the Eclipse Lyo OAuth provider.</description>

    <properties>
    </properties>

    <dependencies>
        <!-- Lyo Dependencies -->
        <dependency>
            <groupId>org.eclipse.lyo.oslc4j.core</groupId>
            <artifactId>lyo-core-settings</artifactId>
            <version>${v.lyo}</version>
        </dependency>
        <!-- Project specific -->
         <dependency>
           <groupId>jakarta.ws.rs</groupId>
           <artifactId>jakarta.ws.rs-api</artifactId>
         </dependency>
        <dependency>
            <groupId>org.eclipse.lyo.server</groupId>
            <artifactId>net.oauth.core-oauth-jakarta</artifactId>
            <version>${v.lyo}</version>
			  <!-- Now that we have the Jakarta binary, exclude the non-jakarta binary. 
			  Otherwise, both the Jakarta & non-Jakarta jar files appear in the war file, 
			  causing warnings that classes are scanned from multiple locations -->
		      <exclusions>
		        <exclusion>
			      <groupId>net.oauth.core</groupId>
			      <artifactId>oauth</artifactId>
		        </exclusion>
		      </exclusions>
        </dependency>
        <dependency>
            <groupId>org.eclipse.lyo.server</groupId>
            <artifactId>net.oauth.core-oauth-consumer-jakarta</artifactId>
            <version>${v.lyo}</version>
			  <!-- Now that we have the Jakarta binary, exclude the non-jakarta binary. 
			  Otherwise, both the Jakarta & non-Jakarta jar files appear in the war file, 
			  causing warnings that classes are scanned from multiple locations -->
		      <exclusions>
		        <exclusion>
			      <groupId>net.oauth.core</groupId>
			      <artifactId>oauth-consumer</artifactId>
		        </exclusion>
		      </exclusions>
        </dependency>
        <dependency>
            <groupId>org.eclipse.lyo.server</groupId>
            <artifactId>net.oauth.core-oauth-provider-jakarta</artifactId>
            <version>${v.lyo}</version>
			  <!-- Now that we have the Jakarta binary, exclude the non-jakarta binary. 
			  Otherwise, both the Jakarta & non-Jakarta jar files appear in the war file, 
			  causing warnings that classes are scanned from multiple locations -->
		      <exclusions>
		        <exclusion>
			      <groupId>net.oauth.core</groupId>
			      <artifactId>oauth-provider</artifactId>
		        </exclusion>
		      </exclusions>
        </dependency>

        <!-- Generic -->
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
